# Create whitelisting rules here. These have the form
#   <path>    <access-spec>    <options>
# where <options> is optional.
#
# <path> may be any path. Backslashes are escaped as per usual. If you need
# spaces in your path, use double quotes ("/my path/") or octal notation
# (/my\040path).
#
# <access-spec> specifies how this file or any path below this directory may be
# accessed. It is a concatination of the following elements:
#   - F(<spec>)     Access rules on regular entries, where <spec> is a combination
#                   / a selection of:
#                    - r  Read files
#                    - w  Write files
#                    - x  Execute files or directories
#                    - t  Truncate files (ignored for landlock ABI < 3)
#                    - u  remove (Unlink) files
#                   ',' and '-' are ignored so you can write "r-x" etc.
#
#   - D(<spec>)     Access rules for directories, where <spec> is a combination
#                   / a selection of:
#                    - r  List entries
#                    - u  remove (Unlink) directories
#                    - m  refer (Move) entries (ignored for landlock ABI < 2)
#                    - C(<mkspec>)  Create entries, where <mkspec> is a
#                                   combination of:
#                                    - c  Character special files
#                                    - d  Directories
#                                    - r or '-'  Regular files
#                                    - s  Unix Sockets
#                                    - f  Fifo files (named pipes)
#                                    - b  Block special files
#                                    - l  Symlinks
#                                   ',' is ignored.
#                   ',' and '-' are ignored.
#
#   - r             Read and execute everything, just don't modify anything (i.e. equivalent to "F(rx)D(r)")
#   - w             Everything that isn't in 'r'
#   - *             Everything
#
# All specifications in parenthesis might be abbreviated using a '*' (i.e.
# "F(rwxtu)" becomes "F(*)"), or the parenthesis might be emmited alltogether
# (i.e. "F(*)D(rC(*))" becomes "FD(rC)").
#
#                                 Examples:
#                                  - "D(r)"          - only list all entries
#                                  - "r"             - read-only access
#                                  - "F(rwxt)D(rmC)" - allow all but the removal of
#                                                      any files (though files might
#                                                      still be truncated, moved or
#                                                      overwritten
#
# Finally, <options> is a list of semicolon-separated key-value pairs:
#   - uid=<users>   Comma-separated list of users that a rule applies to.
#                   If a user starts with an '!', it is explicitly excluded.
#                   You may either give the name or UID.
#   - gid=<groups>  Comma-separated list of groups that a rule applies to.
#                   If a group starts with an '!', it is explicitly excluded.
#                   You may either give the name or GID.
#   - exclude=<path> Comma-separated list of all entries in a path that the
#                   rule does not apply to.
#  Please note, that the exclusion feature works by listing all other entries in
#  the direcory and applying the rules to them. Any other entries that are added
#  to the directory later on will not be granted access to.


/			*			uid=0;gid=sudo,adm
/			r
/dev		* # for /dev/null, /dev/zero etc.
/home/	*
